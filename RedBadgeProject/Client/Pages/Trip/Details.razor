@page "/trip/{TripId:int}"
@using RedBadgeProject.Shared.Models.Trip
@using RedBadgeProject.Shared.Models.TripStaff
@attribute [Authorize]
@inject HttpClient Http

<h3>Trip #@TripId</h3>

@if (Trip != null)
{
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span><h4><strong>@Trip.Name</strong></h4></span>
            </div>
            <div class="card-body">
                <p class="card-text">LocationFromId: @Trip.LocationFromId</p>
                <p class="card-text">LocationFrom name: @Trip.LocationFrom</p>
                <p class="card-text">LocationToId: @Trip.LocationToId</p>
                <p class="card-text">LocationTo name: @Trip.LocationTo</p>
                <p class="card-text">VehicleId: @Trip.VehicleId</p>
                <p class="card-text">Vehicle: @Trip.Vehicle</p>
                <p class="card-text">StartDate: @Trip.StartDate.Value.ToString("dd-MMM-yyyy")</p>
                <p class="card-text">EndDate: @Trip.EndDate.Value.ToString("dd-MMM-yyyy")</p>
                <p class="card-text">Capactiy: @Trip.Capacity</p>
            </div>
            <hr>
            <table class="table">
                <thead>Staff assigned to <strong>@Trip.Name:</strong></thead>
                <tbody>
                    @foreach (var tripStaff in _tripStaff)
                    {
                        <tr>
                            <td><strong>@tripStaff.Staff</strong></td>
                            <td><a href="@($"tripstaff/delete/{tripStaff.Id}")">Delete</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25">
                <a href="@($"/Trip/edit/{TripId}")" class="btn btn-outline-primary">Edit</a>
                <a href="@($"/Trip/delete/{TripId}")" class="btn btn-outline-danger">Delete</a>
                <hr>
                <a href="/Trip">Back to Trip Index</a>
            </div>
        </div>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public int TripId {get; set;}
    public TripDetail? Trip {get; set;}
    private IEnumerable<TripStaffDetail> _tripStaff;

    protected override async Task OnInitializedAsync()
    {
        Trip = await Http.GetFromJsonAsync<TripDetail>($"/api/trip/{TripId}");
        _tripStaff = await Http.GetFromJsonAsync<List<TripStaffDetail>>($"/api/tripstaff/tg/{TripId}");
    }
}