@page "/trip/create"
@using RedBadgeProject.Shared.Models.Trip
@attribute [Authorize]
@inject HttpClient Http
@using RedBadgeProject.Shared.Models.Vehicle
@using RedBadgeProject.Shared.Models.Location
@inject NavigationManager navigation

<h3>Create</h3>

@if(errorMessage != null)
{
    <h5 class="text-danger">@errorMessage</h5>
}

@if (vehicles == null || locations == null)
{
    <p><em>Loading ...</em></p>
} else {
    <div class="container">
        <EditForm Model="@model" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <div class="form-group">
                <label>Name</label>
                <InputText class="form-control" @bind-Value="model.Name"/>
            </div>

            <label>Departure Location</label>
            <InputSelect class="form-control" @bind-Value="model.LocationFromId">
                @foreach (var location in locations)
                {
                    <option value="@location.Id">@location.Name</option>
                }
            </InputSelect>

            <label>Destination Location</label>
            <InputSelect class="form-control" @bind-Value="model.LocationToId">
                @foreach (var location in locations)
                {
                    <option value="@location.Id">@location.Name</option>
                }
            </InputSelect>

            <label>Vehicle</label>
            <InputSelect class="form-control" @bind-Value="model.VehicleId">
                @foreach (var vehicle in vehicles)
                {
                    <option value="@vehicle.Id">@vehicle.Name</option>
                }
            </InputSelect>

            <div class="form-group">
                <label>StartDate</label>
                <InputDate class="form-control" @bind-Value="model.StartDate"/>
            </div>

            <div class="form-group">
                <label>EndDate</label>
                <InputDate class="form-control" @bind-Value="model.EndDate"/>
            </div>

            <div class="form-group">
                <label>Capacity</label>
                <InputNumber class="form-control" @bind-Value="model.Capacity"/>
            </div>

            <div class="d-flex justify-content-center mt-3">
                <button type="submit" class="btn btn-primary btn-block mt-5">submit</button>
            </div>
            <a href="@($"/trip")">Back to Index</a>
        </EditForm>
    </div>
}

@code {
    private TripCreate model = new();
    private IEnumerable<VehicleDetail> vehicles;
    private IEnumerable<LocationDetail> locations;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        vehicles = await Http.GetFromJsonAsync<IEnumerable<VehicleDetail>>("/api/vehicle");
        locations = await Http.GetFromJsonAsync<IEnumerable<LocationDetail>>("/api/location");
    }

    private async void HandleSubmit()
    {
        var createRes = await Http.PostAsJsonAsync<TripCreate>("/api/trip", model);
        if (createRes.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/trip");
        }
        else
        {
            errorMessage = "Could not create trip.";
        }
    }
}